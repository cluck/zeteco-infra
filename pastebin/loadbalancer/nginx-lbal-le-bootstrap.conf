upstream default_backend_https {
    ip_hash;
    server $DFLBACK:443;
}

server {
    listen       80;
    server_name  $HN "";

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.htm;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

server {
    listen       $IP:443 ssl http2;
    # listen     [$IP6]:443 ssl http2;
    server_name  $HN "";

    location /.well-known/acme-challenge {
        root /usr/share/nginx/www;
    }

    location / {
        root   /var/www/;
        try_files /http_$server_name/$uri /html/$uri @fallback;
        index  index.html index.htm;
    }

    location @fallback {
        proxy_cookie_path "~*(/[^/]+){0,1}(/.*$)" "$1$2";
        proxy_cookie_domain ~.* $server_name;
        proxy_ssl_name $DFLBACK;
        proxy_pass https://default_backend_https;
    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    ssl_certificate /etc/letsencrypt/live/$HN/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$HN/privkey.pem;

    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/$HN/chain.pem;
    # resolver 8.8.8.8 valid=86400;
    resolver_timeout 10;

    # Internally proxy with intermediate security
    # -------------------------------------------
    proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    # Pass a bunch of headers to the downstream server, so they'll know what's going on.
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #
    # Most web apps can be configured to read this header and understand that the current session is actually HTTPS.
    proxy_set_header X-Forwarded-Proto https;
    #
    proxy_ssl_session_reuse on;
    proxy_ignore_client_abort off;
    proxy_ssl_verify on;
    proxy_ssl_verify_depth 2;
    proxy_ssl_trusted_certificate /etc/nginx/proxy-trusts.pem;
    # no because of session re-use:
    proxy_ssl_server_name off;
    #
    proxy_ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';

}
